name: Vars Action
description: action that generates the variables
inputs:
  app-name:
    description: 'Application name'
    required: false
    default: python-action-test
outputs:
  modified-py-files:
    description: 'List of modified Python files'
    value: ${{ steps.vars.outputs.modified_py_files }}
  github-short-sha:
    description: 'Truncated (7 characters max) commit SHA'
    value: ${{ steps.vars.outputs.github_short_sha }}
  github-short-branch:
    description: 'Truncated (40 characters max) branch name'
    value: ${{ steps.vars.outputs.github_short_branch }}
runs:
  using: 'composite'
  steps:
    - name: Export Environment Variables
      id: vars
      shell: bash
      run: |
        set -v

        if [ ! -z "${GITHUB_BASE_REF}" ] ; then
          # pull_request event
          branch_name="${GITHUB_HEAD_REF}"
          git fetch --depth=1 origin ${GITHUB_BASE_REF}
          modified_py_files="$(git diff refs/remotes/origin/${GITHUB_BASE_REF} --name-only --diff-filter=AM -- '*.py' ':!*pb2*' | grep -v '^tc/scripts/')" || true
          github_short_sha=$(echo ${{ github.event.pull_request.head.sha }} | head -c7)
        else
          # push event
          branch_name="${GITHUB_REF##*/}"
          modified_py_files="$(git diff HEAD~1 --name-only --diff-filter=AM -- '*.py' ':!*pb2*' | grep -v '^tc/scripts/')" || true
          github_short_sha=$(echo ${GITHUB_SHA} | head -c7)
        fi

        echo "::set-output name=modified_py_files::${modified_py_files}"
        echo "::set-output name=github_short_sha::${github_short_sha}"
        echo "::set-output name=github_short_branch::${github_short_branch}"
